name: Build and Release

on:
  workflow_dispatch:  # Manual trigger only
    inputs:
      tag:
        description: 'Release tag (e.g. v1.2.3)'
        required: true
        type: string

# Permissions needed for the workflow
permissions:
  contents: write  # Allows the workflow to write to the repository (create tags)
  packages: write  # Allows the workflow to write to GitHub Packages
  pages: write     # Permission to deploy to Pages
  id-token: write  # Permission to verify deployment origin

jobs:
  # Job to set the tag based on input
  tagging:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.set_tag.outputs.tag }}  # Output the tag to be used by other jobs

    steps:
      - name: Checkout [${{ github.repository }}]
        uses: actions/checkout@v4  # Check out the repository code

      - name: Create and Push Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "${{ github.event.inputs.tag }}" -m "Release ${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

      # Create a GitHub release for the tag
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2.3.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.event.inputs.tag }}
          generate_release_notes: true

  # Job to build and test the package
  build:
    runs-on: ubuntu-latest
    needs: tagging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Build package
        run: |
          uv build

      - name: Run tests
        run: |
          uv sync
          uv run pytest tests/ -v

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  # Job to handle notebook processing (if notebooks exist)
  notebooks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Process notebooks
        run: |
          if [ -d "notebooks" ]; then
            echo "Processing notebooks..."
            uv sync
            # Add notebook processing logic here if needed
          else
            echo "No notebooks directory found, skipping..."
          fi

  # Job to deploy documentation to GitHub Pages
  deploy-pages:
    runs-on: ubuntu-latest
    needs: [tagging, build, notebooks]
    if: success()
    permissions:
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Build documentation
        run: |
          uv sync
          mkdir -p docs-build
          echo "<h1>DummyPy Documentation</h1>" > docs-build/index.html
          echo "<p>Release: ${{ github.event.inputs.tag }}</p>" >> docs-build/index.html
          echo "<p>Proprietary betting analytics library</p>" >> docs-build/index.html

          # Copy any existing documentation
          if [ -d "docs" ]; then
            cp -r docs/* docs-build/
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './docs-build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
